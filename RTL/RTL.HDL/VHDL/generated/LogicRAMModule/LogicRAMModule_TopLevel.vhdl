-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is LogicRAMModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity LogicRAMModule_TopLevel is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

Clock : in  std_logic;
Reset : in  std_logic;
Value : in  unsigned(7 downto 0);
Avg : out  unsigned(7 downto 0)
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of LogicRAMModule_TopLevel is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
constant Zero : std_logic := '0';
constant One : std_logic := '1';
constant true : std_logic := '1';
constant false : std_logic := '0';
constant LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F46T47_Expr : std_logic := '1';
constant LogicRAMModule_L25F47T48_Expr : std_logic := '0';
constant LogicRAMModule_L25F63T64_Expr : std_logic := '1';
constant LogicRAMModule_L25F79T80_Expr : unsigned(1 downto 0)  := "10";
constant LogicRAMModule_L25F95T96_Expr : unsigned(1 downto 0)  := "11";
constant LogicRAMModule_L25F102T103_Expr : unsigned(1 downto 0)  := "10";
signal Inputs_Value : unsigned(7 downto 0) := (others => '0');
signal NextState_Index : unsigned(1 downto 0) := (others => '0');
signal LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F31T54_Index : unsigned(1 downto 0) := (others => '0');
signal State_BuffDefault : unsigned(7 downto 0)  := "00000000";
signal LogicRAMModule_L25F36T49_Index : unsigned(7 downto 0) := (others => '0');
signal LogicRAMModule_L25F52T65_Index : unsigned(7 downto 0) := (others => '0');
signal LogicRAMModule_L25F68T81_Index : unsigned(7 downto 0) := (others => '0');
signal LogicRAMModule_L25F84T97_Index : unsigned(7 downto 0) := (others => '0');
signal LogicRAMModule_L25F28T104_Cast : unsigned(7 downto 0) := (others => '0');
signal State_Index : unsigned(1 downto 0)  := "00";
constant State_IndexDefault : unsigned(1 downto 0)  := "00";
signal LogicRAMModule_L25F35T103_Expr : unsigned(10 downto 0)  := "00000000000";
signal LogicRAMModule_L25F35T103_Expr_1 : unsigned(10 downto 0)  := "00000000000";
signal LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr : unsigned(3 downto 0)  := "0000";
signal LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_1 : signed(3 downto 0)  := "0000";
signal LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_2 : signed(3 downto 0)  := "0000";
signal LogicRAMModule_L25F36T97_Expr : unsigned(13 downto 0)  := "00000000000000";
signal LogicRAMModule_L25F36T97_Expr_1 : signed(13 downto 0)  := "00000000000000";
signal LogicRAMModule_L25F36T97_Expr_2 : signed(13 downto 0)  := "00000000000000";
signal LogicRAMModule_L25F36T81_Expr : unsigned(11 downto 0)  := "000000000000";
signal LogicRAMModule_L25F36T81_Expr_1 : signed(11 downto 0)  := "000000000000";
signal LogicRAMModule_L25F36T81_Expr_2 : signed(11 downto 0)  := "000000000000";
signal LogicRAMModule_L25F36T65_Expr : unsigned(9 downto 0)  := "0000000000";
signal LogicRAMModule_L25F36T65_Expr_1 : signed(9 downto 0)  := "0000000000";
signal LogicRAMModule_L25F36T65_Expr_2 : signed(9 downto 0)  := "0000000000";
type State_BuffArray is array(0 to 3) of unsigned(7 downto 0);
signal State_Buff : State_BuffArray := (others => (others => '0'));
type NextState_BuffArray is array(0 to 3) of unsigned(7 downto 0);
signal NextState_Buff : NextState_BuffArray := (others => (others => '0'));
begin
process (Clock, NextState_Index, Reset)
begin
if rising_edge(Clock) then
if ( Reset = '1' ) then
State_Index <= State_IndexDefault;
else
State_Index <= NextState_Index;
end if;
end if;
end process;
process (Clock, NextState_Buff, Reset, State_BuffDefault)
begin
if rising_edge(Clock) then
if ( Reset = '1' ) then
for State_Buff_Iterator in 0 to 3 loop
State_Buff(State_Buff_Iterator) <= State_BuffDefault;
end loop;
else
for State_Buff_Iterator in 0 to 3 loop
State_Buff(State_Buff_Iterator) <= NextState_Buff(State_Buff_Iterator);
end loop;
end if;
end if;
end process;
process(LogicRAMModule_L25F35T103_Expr_1)
alias output is LogicRAMModule_L25F35T103_Expr;
alias source0 is LogicRAMModule_L25F35T103_Expr_1;
begin
-- Output: LogicRAMModule_L25F35T103_Expr, Width: 11, ShiftBy: 2, Sources: 1
output(0) <= source0(2);
output(1) <= source0(3);
output(2) <= source0(4);
output(3) <= source0(5);
output(4) <= source0(6);
output(5) <= source0(7);
output(6) <= source0(8);
output(7) <= source0(9);
output(8) <= source0(10);
output(9) <= '0';
output(10) <= '0';
end process;

process(LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_1, LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_2)
begin
    LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr <= resize(unsigned(signed(resize(LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_1, LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_1'length + 1)) + signed(resize(LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_2, LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_2'length + 1))), LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr'length);

end process;

process(LogicRAMModule_L25F36T97_Expr_1, LogicRAMModule_L25F36T97_Expr_2)
begin
    LogicRAMModule_L25F36T97_Expr <= resize(unsigned(signed(resize(LogicRAMModule_L25F36T97_Expr_1, LogicRAMModule_L25F36T97_Expr_1'length + 1)) + signed(resize(LogicRAMModule_L25F36T97_Expr_2, LogicRAMModule_L25F36T97_Expr_2'length + 1))), LogicRAMModule_L25F36T97_Expr'length);

end process;

process(LogicRAMModule_L25F36T81_Expr_1, LogicRAMModule_L25F36T81_Expr_2)
begin
    LogicRAMModule_L25F36T81_Expr <= resize(unsigned(signed(resize(LogicRAMModule_L25F36T81_Expr_1, LogicRAMModule_L25F36T81_Expr_1'length + 1)) + signed(resize(LogicRAMModule_L25F36T81_Expr_2, LogicRAMModule_L25F36T81_Expr_2'length + 1))), LogicRAMModule_L25F36T81_Expr'length);

end process;

process(LogicRAMModule_L25F36T65_Expr_1, LogicRAMModule_L25F36T65_Expr_2)
begin
    LogicRAMModule_L25F36T65_Expr <= resize(unsigned(signed(resize(LogicRAMModule_L25F36T65_Expr_1, LogicRAMModule_L25F36T65_Expr_1'length + 1)) + signed(resize(LogicRAMModule_L25F36T65_Expr_2, LogicRAMModule_L25F36T65_Expr_2'length + 1))), LogicRAMModule_L25F36T65_Expr'length);

end process;
process(Inputs_Value, LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F31T54_Index, State_Buff, State_Index)
begin
for NextState_Buff_Iterator in 0 to 3 loop
NextState_Buff(NextState_Buff_Iterator) <= State_Buff(NextState_Buff_Iterator);
end loop;
NextState_Index <= State_Index;
NextState_Buff(TO_INTEGER(UNSIGNED(State_Index))) <= Inputs_Value;
NextState_Index <= LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F31T54_Index;
end process;
process(LogicRAMModule_L25F28T104_Cast, LogicRAMModule_L25F35T103_Expr, LogicRAMModule_L25F36T49_Index, LogicRAMModule_L25F36T65_Expr, LogicRAMModule_L25F36T81_Expr, LogicRAMModule_L25F36T97_Expr, LogicRAMModule_L25F52T65_Index, LogicRAMModule_L25F68T81_Index, LogicRAMModule_L25F84T97_Index, LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr, State_Buff, State_Index, Value)
begin
LogicRAMModule_L25F35T103_Expr_1 <= LogicRAMModule_L25F36T97_Expr(10 downto 0);
LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_1 <= signed(resize(unsigned(State_Index), LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_1'length));
LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr_2 <= (0 => LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F46T47_Expr, others => '0');
LogicRAMModule_L25F36T97_Expr_1 <= signed(resize(unsigned(LogicRAMModule_L25F36T81_Expr), LogicRAMModule_L25F36T97_Expr_1'length));
LogicRAMModule_L25F36T97_Expr_2 <= signed(resize(unsigned(LogicRAMModule_L25F84T97_Index), LogicRAMModule_L25F36T97_Expr_2'length));
LogicRAMModule_L25F36T81_Expr_1 <= signed(resize(unsigned(LogicRAMModule_L25F36T65_Expr), LogicRAMModule_L25F36T81_Expr_1'length));
LogicRAMModule_L25F36T81_Expr_2 <= signed(resize(unsigned(LogicRAMModule_L25F68T81_Index), LogicRAMModule_L25F36T81_Expr_2'length));
LogicRAMModule_L25F36T65_Expr_1 <= signed(resize(unsigned(LogicRAMModule_L25F36T49_Index), LogicRAMModule_L25F36T65_Expr_1'length));
LogicRAMModule_L25F36T65_Expr_2 <= signed(resize(unsigned(LogicRAMModule_L25F52T65_Index), LogicRAMModule_L25F36T65_Expr_2'length));
Inputs_Value <= Value;
LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F31T54_Index <= LogicRAMModule_L28F9L31T10_LogicRAMModule_L30F32T47_Expr(1 downto 0);
LogicRAMModule_L25F28T104_Cast <= LogicRAMModule_L25F35T103_Expr(7 downto 0);
Avg <= LogicRAMModule_L25F28T104_Cast;
LogicRAMModule_L25F36T49_Index <= State_Buff(bit_to_integer(LogicRAMModule_L25F47T48_Expr));
LogicRAMModule_L25F52T65_Index <= State_Buff(bit_to_integer(LogicRAMModule_L25F63T64_Expr));
LogicRAMModule_L25F68T81_Index <= State_Buff(TO_INTEGER(UNSIGNED(LogicRAMModule_L25F79T80_Expr)));
LogicRAMModule_L25F84T97_Index <= State_Buff(TO_INTEGER(UNSIGNED(LogicRAMModule_L25F95T96_Expr)));
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
