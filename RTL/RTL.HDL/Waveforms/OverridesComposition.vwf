/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("NoOverrideValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("NoOverrideValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("AutoOverrideValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AutoOverrideValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("L1Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L1Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L2Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L2Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L3Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L3Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("GetValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("GetValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

TRANSITION_LIST("InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("NoOverrideValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.519;
		LEVEL 0 FOR 0.62;
		LEVEL 1 FOR 99.38;
		LEVEL 0 FOR 1.043;
		LEVEL 1 FOR 788.438;
	}
}

TRANSITION_LIST("NoOverrideValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.194;
		LEVEL 1 FOR 0.382;
		LEVEL 0 FOR 99.618;
		LEVEL 1 FOR 0.735;
		LEVEL 0 FOR 788.071;
	}
}

TRANSITION_LIST("NoOverrideValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.296;
		LEVEL 1 FOR 0.451;
		LEVEL 0 FOR 99.549;
		LEVEL 1 FOR 0.665;
		LEVEL 0 FOR 789.039;
	}
}

TRANSITION_LIST("NoOverrideValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.9;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.531;
		LEVEL 0 FOR 788.569;
	}
}

TRANSITION_LIST("NoOverrideValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.82;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.459;
		LEVEL 0 FOR 788.721;
	}
}

TRANSITION_LIST("NoOverrideValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.345;
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 99.611;
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 789.266;
	}
}

TRANSITION_LIST("NoOverrideValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.824;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 789.176;
	}
}

TRANSITION_LIST("NoOverrideValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.584;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 789.416;
	}
}

TRANSITION_LIST("AutoOverrideValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.599;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 789.401;
	}
}

TRANSITION_LIST("L1Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.169;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 789.831;
	}
}

TRANSITION_LIST("L1Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.183;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.817;
	}
}

TRANSITION_LIST("L1Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.185;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 788.815;
	}
}

TRANSITION_LIST("L1Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.718;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.282;
	}
}

TRANSITION_LIST("L1Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.283;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.717;
	}
}

TRANSITION_LIST("L1Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.238;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.762;
	}
}

TRANSITION_LIST("L1Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("L1Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("L2Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.464;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 789.536;
	}
}

TRANSITION_LIST("L2Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.627;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.373;
	}
}

TRANSITION_LIST("L2Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.587;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.413;
	}
}

TRANSITION_LIST("L2Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.893;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.107;
	}
}

TRANSITION_LIST("L2Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.224;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.776;
	}
}

TRANSITION_LIST("L2Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.651;
		LEVEL 0 FOR 0.318;
		LEVEL 1 FOR 99.682;
		LEVEL 0 FOR 0.318;
		LEVEL 1 FOR 789.031;
	}
}

TRANSITION_LIST("L2Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.963;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 789.037;
	}
}

TRANSITION_LIST("L2Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("L3Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.608;
		LEVEL 0 FOR 0.386;
		LEVEL 1 FOR 99.614;
		LEVEL 0 FOR 0.902;
		LEVEL 1 FOR 788.49;
	}
}

TRANSITION_LIST("L3Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.598;
		LEVEL 1 FOR 0.39;
		LEVEL 0 FOR 99.61;
		LEVEL 1 FOR 0.833;
		LEVEL 0 FOR 788.569;
	}
}

TRANSITION_LIST("L3Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.91;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 99.614;
		LEVEL 1 FOR 0.758;
		LEVEL 0 FOR 788.332;
	}
}

TRANSITION_LIST("L3Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.591;
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 99.611;
		LEVEL 1 FOR 0.689;
		LEVEL 0 FOR 788.72;
	}
}

TRANSITION_LIST("L3Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.239;
		LEVEL 1 FOR 0.457;
		LEVEL 0 FOR 99.543;
		LEVEL 1 FOR 0.615;
		LEVEL 0 FOR 788.146;
	}
}

TRANSITION_LIST("L3Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.895;
		LEVEL 1 FOR 100.158;
		LEVEL 0 FOR 788.947;
	}
}

TRANSITION_LIST("L3Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.217;
		LEVEL 1 FOR 0.473;
		LEVEL 0 FOR 99.527;
		LEVEL 1 FOR 0.473;
		LEVEL 0 FOR 788.31;
	}
}

TRANSITION_LIST("L3Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.672;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 789.328;
	}
}

TRANSITION_LIST("GetValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.441;
		LEVEL 0 FOR 0.385;
		LEVEL 1 FOR 99.615;
		LEVEL 0 FOR 0.666;
		LEVEL 1 FOR 787.893;
	}
}

TRANSITION_LIST("GetValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.445;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.598;
		LEVEL 0 FOR 787.957;
	}
}

TRANSITION_LIST("GetValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.467;
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 99.615;
		LEVEL 1 FOR 0.526;
		LEVEL 0 FOR 788.007;
	}
}

TRANSITION_LIST("GetValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.729;
		LEVEL 1 FOR 0.388;
		LEVEL 0 FOR 99.612;
		LEVEL 1 FOR 0.458;
		LEVEL 0 FOR 787.813;
	}
}

TRANSITION_LIST("GetValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.974;
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 99.615;
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 788.641;
	}
}

TRANSITION_LIST("GetValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.009;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 788.991;
	}
}

TRANSITION_LIST("GetValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("GetValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

TIME_BAR
{
	TIME = 14650;
	MASTER = TRUE;
}
;
